# Secret Cloner Example  
# Demonstrates using the actual secret-cloner script from the nuop repository

---
apiVersion: kemper.buzz/v1alpha1
kind: NuOperator
metadata:
  name: secret-cloner
  namespace: default
spec:
  serviceAccountName: secret-cloner-sa
  env:
    - name: RUST_LOG
      value: info
  mappings:
    - name: secret-cloner
      group: ""
      version: v1
      kind: Secret
      labelSelectors:
        app.kubernetes.io/replicate: "yes"
  sources:
    - location: https://github.com/ck3mp3r/nuop.git?dir=operator/scripts
      path: /scripts

---
# ServiceAccount with appropriate RBAC for Secret cloning
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-cloner-sa
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-cloner
rules:
# Secret permissions
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Namespace permissions (for cross-namespace cloning)
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-cloner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-cloner
subjects:
- kind: ServiceAccount
  name: secret-cloner-sa
  namespace: default

---
# Example Secret to clone (add labels to clone it)
apiVersion: v1
kind: Secret
metadata:
  name: example-secret
  namespace: default
  labels:
    app.kubernetes.io/replicate: "yes"
  annotations:
    nuop.kemper.buzz/replicate-to: "dev,staging"
type: Opaque
data:
  # These are base64 encoded values
  username: YWRtaW4=  # admin
  password: cGFzc3dvcmQ=  # password
  api-key: YWJjZGVmZ2hpams=  # abcdefghijk
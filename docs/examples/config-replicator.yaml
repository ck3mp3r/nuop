---
# ConfigMap Replicator Example
# Demonstrates using the actual config-replicator script from the nuop repository

apiVersion: kemper.buzz/v1alpha1
kind: NuOperator
metadata:
  name: config-replicator
  namespace: default
spec:
  serviceAccountName: config-replicator-sa
  env:
    - name: RUST_LOG
      value: info
  mappings:
    - name: config-replicator
      group: ""
      version: v1
      kind: ConfigMap
      labelSelectors:
        app.kubernetes.io/replicate: "yes"
  sources:
    - location: https://github.com/ck3mp3r/nuop.git?dir=operator/scripts
      path: /scripts

---
# ServiceAccount with appropriate RBAC for ConfigMap replication
apiVersion: v1
kind: ServiceAccount
metadata:
  name: config-replicator-sa
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: config-replicator
rules:
  # ConfigMap permissions
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Namespace permissions (for cross-namespace replication)
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: config-replicator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: config-replicator
subjects:
  - kind: ServiceAccount
    name: config-replicator-sa
    namespace: default

---
# Example ConfigMap to replicate (add labels to replicate it)
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
  namespace: default
  labels:
    app.kubernetes.io/replicate: "yes"
  annotations:
    nuop.kemper.buzz/replicate-to: "dev,staging"
data:
  config.yaml: |
    database:
      host: localhost
      port: 5432
    api:
      version: v1
      timeout: 30s

---
name: Build and Push Docker Images

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ck3mp3r/nuop

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64
    
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix with Determinate Systems installer
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build operator with Nix
        run: |
          nix build --print-build-logs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags
        id: tags
        run: |
          VERSION=$(grep '^version = ' operator/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.arch }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-${{ matrix.arch }}"
          else
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-$(git rev-parse --short HEAD)-${{ matrix.arch }}"
          fi
          
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./operator
          file: ./operator/docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha,scope=${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}
          build-contexts: |
            nix-result=result

  manifest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          VERSION=$(grep '^version = ' operator/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
            
            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-arm64
          else
            docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-$(git rev-parse --short HEAD) \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-$(git rev-parse --short HEAD)-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}-$(git rev-parse --short HEAD)-arm64
          fi

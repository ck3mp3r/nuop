# https://numtide.github.io/devshell
packages = [
  "alejandra",
  "nushell",
  "helm-ls",
  "pre-commit",
  "pyright",
  "black"
]

devshell.startup.foo.text = '''
mkdir -p $PRJ_ROOT/kind
export KUBECONFIG=$PRJ_ROOT/kind/kube.config
'''

[[commands]]
package = "colima"

[[commands]]
package = "act"

[[commands]]
name = "helm"
package = "kubernetes-helm"

[[commands]]
package = "kind"

[[commands]]
package = "kubectl"

[[commands]]
package = "tilt"
category = "kubeops"

[[commands]]
package = "cargo-tarpaulin"

[[commands]]
name = "kind-start"
command = '''
#!/usr/bin/env nu

if (kind get clusters | find "nuop" | is-empty) {
  kind create cluster --name nuop --config ./kind/kind-cluster.yaml
  kind get kubeconfig -n nuop
  | from yaml
  | reject clusters.0.cluster.certificate-authority-data
  | upsert clusters.0.cluster.insecure-skip-tls-verify true
  | upsert clusters.0.cluster.server https://127.0.0.1:7543
  | to yaml
  | save -f ./kind/kube.config
  kubectx kind-nuop
}
'''
category = "kubeops"
help = "Start kind cluster"

[[commands]]
name = "op-coverage"
command = "make coverage"
category = "operator"
help = "generate code coverage"

[[commands]]
name = "op-clean"
command = "make clean"
category = "operator"
help = "cargo clean"

[[commands]]
name = "op-crds"
command = "make crds"
category = "operator"
help = "Generate crds"

[[commands]]
name = "op-build"
command = "make build"
help = "build"
category = "operator"

[[commands]]
name = "op-tests"
command = "make tests"
help = "Run cargo tests"
category = "operator"

[[commands]]
name = "act-test"
command = "make act-test"
help = "Run github test workflow"
category = "github"

[[commands]]
name = "op-clippy"
command = "make clippy"
help = "Run clippy"
category = "operator"

[[commands]]
name = "op-fmt"
command = "make fmt"
help = "Run cargo format"
category = "operator"

[[commands]]
name = "op-run-manager"
command = "LOG_LEVEL=debug NUOP_MODE=manager cargo run --bin operator"
help = "run operator as manager"
category = "operator"

[[commands]]
name = "op-run-standard"
command = "LOG_LEVEL=debug NUOP_SCRIPT_PATH=$PRJ_ROOT/operator/scripts cargo run --bin operator"
help = "Run standard mode operator"
category = "operator"

[[commands]]
name = "op-run-managed"
command = "LOG_LEVEL=debug NUOP_MODE=managed NUOP_MAPPINGS_PATH=$PRJ_ROOT/operator/test/mappings NUOP_SCRIPT_PATH=$PRJ_ROOT/operator/scripts cargo run --bin operator"
help = "Run managed mode operator"
category = "operator"
[git.hooks]
enable = true

[git.hooks.pre-push]
text = """
pre-commit run --all-files
act-test
"""
